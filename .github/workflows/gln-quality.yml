---

name: Quality workflow
run-name: "Workflow: ${{ github.workflow }} on event: ${{ github.event_name }}"
on: 
    pull_request:
    push:
      branches_ignore:
        - main

jobs:
    build :
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Setup Java
              uses: actions/setup-Java@v3
              with:
                java-version: '17'
                distribution: 'adopt'
            - name: Build with Maven
              run: mvn -B package --file pom.xml
            - name: Add coverage to PR
              id: jacoco
              uses: madrapps/jacoco-report@v1.3
              with:
                paths: ${{ github.workspace }}/build/reports/jacoco/testCoverage/testCoverage.xml
                token: ${{ secrets.GITHUB_TOKEN }}
                min-coverage-overall: 40
                min-coverage-changed-files: 60
            - name: SonarCloud Scan
              run: mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=benauca_WebGoat -Dsonar.login=${{ secrets.SONAR_TOKEN }}
                # Check the Quality Gate status.
            - name: SonarQube Quality Gate check
              id: sonarqube-quality-gate-check
              uses: sonarsource/sonarqube-quality-gate-action@master
              # Force to fail step after specific time.
              timeout-minutes: 5
              with:
                scanMetadataReportFile: target/sonar/report-task.txt
              env:
                SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              # Optionally you can use the output from the Quality Gate in another step.
              # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
            - name: "Example show SonarQube Quality Gate Status value"
              run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"  
